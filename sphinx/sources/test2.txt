テスト
==============================
:日付: 2011/12/24

概要
------------------------------

sphinxがちゃんと動くかのテスト。

reStructuredText
------------------------------

セクション
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
セクションのヘッダは、セクションのタイトルを句読点などの記号の文字でアンダーラインを引くことで設定します。
必要に応じてでオーバーラインも併用することができます。
アンダーラインはテキストと同じか、それ以上の長さにする必要があります:

通常は、文字の種類と見出しのレベルは関係ないため、どの文字でも使用することができます。
使用していない種類のアンダーラインが出てくると、見出しのレベルが一段変わる、というルールになっています。
参考までに、Pythonドキュメントで使っている慣例について紹介しておきます。::

 # 部: オーバーライン付き
 * 章: オーバーライン付き
 =, セクション
 -, サブセクション
 ^, サブサブセクション
 ", パラグラフ

もちろん、どのようなマークアップ文字を選択しても自由ですし、組み合わせることで、より深い、ネストレベルを使用することもできます。
reSTの文章を参照してください。
ただし、ほとんどの対象となる出力フォーマット(HTML, LaTeX)は、ネストできる深さには限界が設定されている、ということは忘れないでください。

リスト
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
リストを表現するマークアップはほぼ結果の見た目通りです。
パラグラフの最初をアスタリスクで開始して、適切にインデントをしてやるだけです。
ナンバー付きのリストも同様です。 
# を使うことで、ナンバリングを自動で行うこともできます::

 * これは丸が行頭に付くリストです
 * このリストには2つの項目があります。2つめの
   項目は2行にまたがっています。

 1. これはナンバー付きリストです。
 2. これも2つの項目があります。

 #. これはナンバー付きリストです。
 #. これも2つの項目があります。

テストされたリストも使用することができますが、親のリストとは空白行で区切る必要があります::

 * これは
 * リストです

  * ネストされたリストです
  * サブ項目です

* こうやって、親のリストを継続することもできます

定義リストは以下のようにして作成します:

用語 (行末までが用語です)
   用語の定義です。定義はインデントする必要があります。

   空白行で区切ることで、定義に複数のパラグラフを書くことができます。

次の用語
   説明
 
パラグラフは周囲のパラグラフよりも深いインデントにしてやる必要があります。



ハイパーリンク
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

外部リンク
""""""""""""""""""""""""""""""

`リンクテキスト <http://ターゲットURL>`_ という書くことで、外部のウェブサイトへのリンクを埋め込むことができます。
もしリンクテキストがウェブのアドレス>である場合には、特別なマークアップは必要ありません。
パーサーが通常のテキスト中でリンクか、メールアドレスを見つけると、そのままそれにリンクを埋め込んでくれます。

* `sphinxドキュメント <http://sphinx.shibu.jp/contents.html>`_
* `はやわかり reStructuredText <http://www.planewave.org/translations/rst/quickref.html>`_

内部リンク
""""""""""""""""""""""""""""""

内部リンクは特別なreSTのロールを通じて行われます。
詳しくは、特別なマークアップ 自由な場所へのクロスリファレンス のセクションを見てください。


画像
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

reSTは画像に関するディレクティブもサポートしています。以下のように使用します。::

 .. image:: gnu.png
    (オプション)

Sphinx内で使用する場合には、ソースファイルからの相対パスか、トップのソースディレクトリからの絶対パスでファイル名(ここでは gnu.png)を指定します。
例えば、 sketch/spam.rst というソースファイルからは、 images/spam.png, ../images/spam.png, /images/spam.png というように書くことができます。

このディレクティブを使用すると、Sphinxはビルド時に、指定された画像ファイルを出力ディレクトリのサブディレクトリにコピーします。
HTML出力の場合には、 _static といったディレクトリにコピーされます。

イメージサイズに関するオプション(width と height)は以下のように解釈されます。
もし単位が無い、もしくは単位がpixelsの場合には、与えられたサイズは出力するチャンネルがピクセルをサポートしているかどうかだけが考慮されます。
例えば、LaTeX出力はこれをサポートしていません。
田の単位(ポイントを表す pt など)はHTMLでもLaTeXでも使用されます。

Sphinxは標準のdocutilsを拡張していて、拡張子としてアスタリスク(*)を受け取れるようになっています::

 .. image:: gnu.*

アスタリスクが指定されると、Sphinxは指定されたパターンにマッチするすべての画像フォーマットを検索して、使用するタイプを決定します。
それぞれのビルダーは、候補となるベストのイメージを選択します。 
gnu.* にマッチするファイル名として、 gnu.pdf と、 gnu.png がソースツリーの中に存在していたとします。
LaTeXビルダーは前者のPDFを、HTMLビルダーは後者のPNGを優先的に利用します。


テーブル
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

テーブルの縦線が見えない

グリッドテーブル
""""""""""""""""""""""""""""""

+------------+------------+-----------+ 
| Header 1   | Header 2   | Header 3  | 
+============+============+===========+ 
| body row 1 | column 2   | column 3  | 
+------------+------------+-----------+ 
| body row 2 | Cells may span columns.| 
+------------+------------+-----------+ 
| body row 3 | Cells may  | - Cells   | 
+------------+ span rows. | - contain | 
| body row 4 |            | - blocks. | 
+------------+------------+-----------+


シンプルテーブル
""""""""""""""""""""""""""""""

=====  =====  ====== 
   Inputs     Output 
------------  ------ 
  A      B    A or B 
=====  =====  ====== 
False  False  False 
True   False  True 
False  True   True 
True   True   True 
=====  =====  ======


区切り線 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

区切り線のマーカは、記号文字4つ以上からなる 
水平ラインです。::

 ------------

区切り線は、セクションの最初や最後に置くべきでは 
ありませんし、区切り線を連続してならべるのも 
避けるべきです。

